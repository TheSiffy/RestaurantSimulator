/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:417938:
  appc.background(230);
} //_CODE_:window1:417938:

public void resetClick(GButton source, GEvent event) { //_CODE_:reset:557581:
int i = 0;
while (i < Customers.size()) {
    Customers.remove(i);  
    i = 0;
  }
Customers.trimToSize();

while (i < Waiters.size()) {
    Waiters.remove(i);  
    i = 0;
  }
Waiters.trimToSize();

  while (i < Chefs.size()) {
    Chefs.remove(i);  
    i = 0;
  }
Chefs.trimToSize();
for (int h = 0; h < res.columnTables; i++) {
    for (int j  = 0; j < res.rowTables; j++) {
      Tables[h][j] = true;
    }
  }
} //_CODE_:reset:557581:

public void startClick(GButton source, GEvent event) { //_CODE_:start:514612:
if (paused == false) {
  paused = true;
  noLoop();
  start.setText("Continue");
  }
else {
    paused = false;
    loop();
    start.setText("Pause");
  }
} //_CODE_:start:514612:

public void colorListClick(GDropList source, GEvent event) { //_CODE_:colorList:940218:

} //_CODE_:colorList:940218:

// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  window1 = GWindow.getWindow(this, "Window title", 0, 0, 300, 400, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.KEEP_OPEN);
  window1.addDrawHandler(this, "win_draw1");
  reset = new GButton(window1, 20, 20, 80, 30);
  reset.setText("Clear");
  reset.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  reset.addEventHandler(this, "resetClick");
  start = new GButton(window1, 180, 20, 80, 30);
  start.setText("Pause");
  start.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  start.addEventHandler(this, "startClick");
  colorList = new GDropList(window1, 20, 95, 90, 120, 5, 10);
  colorList.setItems(loadStrings("list_940218"), 0);
  colorList.addEventHandler(this, "colorListClick");
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GButton reset; 
GButton start; 
GDropList colorList; 
